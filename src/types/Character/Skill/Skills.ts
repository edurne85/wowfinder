import { Skill } from './Skill';
import { StatKey } from '../Stats';
import { SkillSpec } from './SkillSpec';
import { mkSkill } from './helpers';

const Skills: { [key in Skill]: SkillSpec } = {
    acrobatics: mkSkill(Skill.acrobatics, StatKey.DEX, null, false, -2),
    athletics: mkSkill(Skill.athletics, StatKey.STR),
    appraise: mkSkill(Skill.appraise, StatKey.INT),
    bluff: mkSkill(Skill.bluff, StatKey.CHA),
    alchemy: mkSkill(Skill.alchemy, StatKey.INT, StatKey.DEX, true),
    blacksmithing: mkSkill(Skill.blacksmithing, StatKey.INT, StatKey.DEX, true),
    cooking: mkSkill(Skill.cooking, StatKey.INT, StatKey.DEX, true),
    inscription: mkSkill(Skill.inscription, StatKey.INT, StatKey.DEX, true),
    jewelcrafting: mkSkill(Skill.jewelcrafting, StatKey.INT, StatKey.DEX, true),
    leatherworking: mkSkill(
        Skill.leatherworking,
        StatKey.INT,
        StatKey.DEX,
        true,
    ),
    tailoring: mkSkill(Skill.tailoring, StatKey.INT, StatKey.DEX, true),
    technology: mkSkill(Skill.technology, StatKey.INT, StatKey.DEX, true),
    woodworking: mkSkill(Skill.woodworking, StatKey.INT, StatKey.DEX, true),
    diplomacy: mkSkill(Skill.diplomacy, StatKey.CHA),
    disarm: mkSkill(Skill.disarm, StatKey.DEX, null, true),
    disguise: mkSkill(Skill.disguise, StatKey.CHA),
    escape: mkSkill(Skill.escape, StatKey.DEX, null, false, -2),
    handleAnimal: mkSkill(Skill.handleAnimal, StatKey.CHA),
    heal: mkSkill(Skill.heal, StatKey.WIS),
    intimidate: mkSkill(Skill.intimidate, StatKey.CHA, StatKey.STR, false, 2),
    linguistics: mkSkill(Skill.linguistics, StatKey.INT, null, true),
    arcane: mkSkill(Skill.arcane, StatKey.INT, StatKey.WIS, true),
    dungeons: mkSkill(Skill.dungeons, StatKey.INT, StatKey.WIS, true),
    engineering: mkSkill(Skill.engineering, StatKey.INT, StatKey.WIS, true),
    geography: mkSkill(Skill.geography, StatKey.INT, StatKey.WIS, true),
    history: mkSkill(Skill.history, StatKey.INT, StatKey.WIS, true),
    nature: mkSkill(Skill.nature, StatKey.INT, StatKey.WIS, true),
    nobility: mkSkill(Skill.nobility, StatKey.INT, StatKey.WIS, true),
    planes: mkSkill(Skill.planes, StatKey.INT, StatKey.WIS, true),
    religion: mkSkill(Skill.religion, StatKey.INT, StatKey.WIS, true),
    perception: mkSkill(Skill.perception, StatKey.WIS),
    act: mkSkill(Skill.act, StatKey.CHA),
    comedy: mkSkill(Skill.comedy, StatKey.CHA),
    dance: mkSkill(Skill.dance, StatKey.CHA),
    keyboard: mkSkill(Skill.keyboard, StatKey.CHA),
    percussion: mkSkill(Skill.percussion, StatKey.CHA),
    sing: mkSkill(Skill.sing, StatKey.CHA),
    speech: mkSkill(Skill.speech, StatKey.CHA),
    string: mkSkill(Skill.string, StatKey.CHA),
    wind: mkSkill(Skill.wind, StatKey.CHA),
    butchery: mkSkill(Skill.butchery, StatKey.WIS, StatKey.INT, true),
    enchanting: mkSkill(Skill.enchanting, StatKey.WIS, StatKey.INT, true),
    fishing: mkSkill(Skill.fishing, StatKey.WIS, StatKey.INT, true),
    herbalism: mkSkill(Skill.herbalism, StatKey.WIS, StatKey.INT, true),
    lumbering: mkSkill(Skill.lumbering, StatKey.WIS, StatKey.INT, true),
    mining: mkSkill(Skill.mining, StatKey.WIS, StatKey.INT, true),
    skinning: mkSkill(Skill.skinning, StatKey.WIS, StatKey.INT, true),
    ride: mkSkill(Skill.ride, StatKey.DEX),
    senseMotive: mkSkill(Skill.senseMotive, StatKey.WIS),
    sleight: mkSkill(Skill.sleight, StatKey.DEX, null, true),
    stealth: mkSkill(Skill.stealth, StatKey.DEX, null, false, -4),
};

export { Skills };
